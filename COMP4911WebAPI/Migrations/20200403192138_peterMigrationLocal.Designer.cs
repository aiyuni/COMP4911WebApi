// <auto-generated />
using System;
using COMP4911WebAPI.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace COMP4911WebAPI.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20200403192138_peterMigrationLocal")]
    partial class peterMigrationLocal
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("COMP4911WebAPI.Models.Credential", b =>
                {
                    b.Property<string>("CredentialId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("EmployeeId");

                    b.Property<string>("LastUpdatedBy");

                    b.Property<DateTime>("LastUpdatedTime");

                    b.Property<string>("Password")
                        .IsRequired();

                    b.Property<byte[]>("Salt");

                    b.Property<string>("Token");

                    b.HasKey("CredentialId");

                    b.HasIndex("EmployeeId");

                    b.ToTable("Credentials");

                    b.HasData(
                        new
                        {
                            CredentialId = "A100001",
                            EmployeeId = 1,
                            LastUpdatedBy = "seeded",
                            LastUpdatedTime = new DateTime(2020, 4, 3, 12, 21, 38, 307, DateTimeKind.Local).AddTicks(569),
                            Password = "h5zsXIiAJifstMXUlRwahqH2gNQXMxK09g2EANgV5V4=",
                            Salt = new byte[] { 236, 21, 23, 71, 157, 83, 255, 140, 81, 4, 32, 131, 57, 100, 90, 188 }
                        },
                        new
                        {
                            CredentialId = "A100002",
                            EmployeeId = 2,
                            LastUpdatedBy = "seeded",
                            LastUpdatedTime = new DateTime(2020, 4, 3, 12, 21, 38, 307, DateTimeKind.Local).AddTicks(1074),
                            Password = "KyNXK/v+IKyZQWLvtYCw4gByfFSiBjH42Q477TEKfPA=",
                            Salt = new byte[] { 66, 16, 58, 204, 9, 200, 202, 17, 94, 104, 101, 231, 128, 56, 176, 1 }
                        },
                        new
                        {
                            CredentialId = "A100003",
                            EmployeeId = 3,
                            LastUpdatedBy = "seeded",
                            LastUpdatedTime = new DateTime(2020, 4, 3, 12, 21, 38, 307, DateTimeKind.Local).AddTicks(1085),
                            Password = "cx9YADAxvBUMFIVsObLUswB+GVVwa3ln4cbQhM9C0Zc=",
                            Salt = new byte[] { 189, 244, 193, 174, 117, 215, 44, 191, 85, 1, 228, 44, 219, 78, 209, 176 }
                        },
                        new
                        {
                            CredentialId = "Nezuko",
                            EmployeeId = 4,
                            LastUpdatedBy = "seeded",
                            LastUpdatedTime = new DateTime(2020, 4, 3, 12, 21, 38, 307, DateTimeKind.Local).AddTicks(1088),
                            Password = "ZUETvkGOsgkCengVi0zH6PrZchqQJSAdF3m7Ssb+ylA=",
                            Salt = new byte[] { 39, 5, 52, 186, 241, 149, 238, 167, 147, 108, 82, 66, 193, 75, 130, 183 }
                        },
                        new
                        {
                            CredentialId = "Nier",
                            EmployeeId = 5,
                            LastUpdatedBy = "seeded",
                            LastUpdatedTime = new DateTime(2020, 4, 3, 12, 21, 38, 307, DateTimeKind.Local).AddTicks(1090),
                            Password = "+7Mybt+CIAEGChIfS4rpL2iSMOx3K++FLuqFBITqkpU=",
                            Salt = new byte[] { 107, 3, 46, 87, 70, 131, 189, 152, 30, 254, 7, 74, 119, 139, 218, 143 }
                        });
                });

            modelBuilder.Entity("COMP4911WebAPI.Models.Employee", b =>
                {
                    b.Property<int>("EmployeeId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("EmployeeCode");

                    b.Property<string>("EmployeeFirstName")
                        .IsRequired();

                    b.Property<string>("EmployeeLastName")
                        .IsRequired();

                    b.Property<bool>("IsActivated");

                    b.Property<bool>("IsAdmin");

                    b.Property<bool>("IsHumanResources");

                    b.Property<bool>("IsProjectManager");

                    b.Property<int>("JobTitleId");

                    b.Property<int>("LabourGradeId");

                    b.Property<int?>("LabourGradeId1");

                    b.Property<string>("LastUpdatedBy");

                    b.Property<DateTime>("LastUpdatedTime");

                    b.Property<int?>("SupervisorId");

                    b.Property<int?>("TimesheetApproverId");

                    b.HasKey("EmployeeId");

                    b.HasIndex("JobTitleId");

                    b.HasIndex("LabourGradeId");

                    b.HasIndex("LabourGradeId1");

                    b.HasIndex("SupervisorId");

                    b.HasIndex("TimesheetApproverId");

                    b.ToTable("Employees");

                    b.HasData(
                        new
                        {
                            EmployeeId = 1,
                            EmployeeCode = 888,
                            EmployeeFirstName = "AdminFirstName",
                            EmployeeLastName = "AdminLastName",
                            IsActivated = true,
                            IsAdmin = true,
                            IsHumanResources = true,
                            IsProjectManager = true,
                            JobTitleId = 1,
                            LabourGradeId = 1,
                            LastUpdatedBy = "Seeded",
                            LastUpdatedTime = new DateTime(2020, 4, 3, 12, 21, 38, 306, DateTimeKind.Local).AddTicks(6420)
                        },
                        new
                        {
                            EmployeeId = 2,
                            EmployeeCode = 778,
                            EmployeeFirstName = "Perry",
                            EmployeeLastName = "Li",
                            IsActivated = true,
                            IsAdmin = false,
                            IsHumanResources = false,
                            IsProjectManager = true,
                            JobTitleId = 2,
                            LabourGradeId = 2,
                            LastUpdatedBy = "Seeded",
                            LastUpdatedTime = new DateTime(2020, 4, 3, 12, 21, 38, 306, DateTimeKind.Local).AddTicks(6987),
                            SupervisorId = 1,
                            TimesheetApproverId = 1
                        },
                        new
                        {
                            EmployeeId = 3,
                            EmployeeCode = 111,
                            EmployeeFirstName = "Bruce",
                            EmployeeLastName = "Link",
                            IsActivated = true,
                            IsAdmin = false,
                            IsHumanResources = false,
                            IsProjectManager = true,
                            JobTitleId = 3,
                            LabourGradeId = 3,
                            LastUpdatedBy = "Seeded",
                            LastUpdatedTime = new DateTime(2020, 4, 3, 12, 21, 38, 306, DateTimeKind.Local).AddTicks(7000),
                            SupervisorId = 1,
                            TimesheetApproverId = 2
                        },
                        new
                        {
                            EmployeeId = 4,
                            EmployeeCode = 123,
                            EmployeeFirstName = "Employee4FirstName",
                            EmployeeLastName = "Employee4LastName",
                            IsActivated = true,
                            IsAdmin = false,
                            IsHumanResources = false,
                            IsProjectManager = false,
                            JobTitleId = 2,
                            LabourGradeId = 2,
                            LastUpdatedBy = "Seeded",
                            LastUpdatedTime = new DateTime(2020, 4, 3, 12, 21, 38, 306, DateTimeKind.Local).AddTicks(7003),
                            SupervisorId = 3,
                            TimesheetApproverId = 3
                        },
                        new
                        {
                            EmployeeId = 5,
                            EmployeeCode = 222,
                            EmployeeFirstName = "Employee5FirstName",
                            EmployeeLastName = "Employee5LastName",
                            IsActivated = true,
                            IsAdmin = false,
                            IsHumanResources = false,
                            IsProjectManager = true,
                            JobTitleId = 3,
                            LabourGradeId = 3,
                            LastUpdatedBy = "Seeded",
                            LastUpdatedTime = new DateTime(2020, 4, 3, 12, 21, 38, 306, DateTimeKind.Local).AddTicks(7006),
                            SupervisorId = 3,
                            TimesheetApproverId = 3
                        });
                });

            modelBuilder.Entity("COMP4911WebAPI.Models.EmployeeProjectAssignment", b =>
                {
                    b.Property<int>("EmployeeId");

                    b.Property<int>("ProjectId");

                    b.Property<bool>("IsProjectManager");

                    b.Property<string>("LastUpdatedBy");

                    b.Property<DateTime>("LastUpdatedTime");

                    b.HasKey("EmployeeId", "ProjectId");

                    b.HasIndex("ProjectId");

                    b.ToTable("EmployeeProjectAssignments");

                    b.HasData(
                        new
                        {
                            EmployeeId = 2,
                            ProjectId = 1,
                            IsProjectManager = true,
                            LastUpdatedBy = "Peter Ahn",
                            LastUpdatedTime = new DateTime(2020, 4, 3, 12, 21, 38, 308, DateTimeKind.Local).AddTicks(7041)
                        },
                        new
                        {
                            EmployeeId = 3,
                            ProjectId = 1,
                            IsProjectManager = false,
                            LastUpdatedBy = "Peter Ahn",
                            LastUpdatedTime = new DateTime(2020, 4, 3, 12, 21, 38, 308, DateTimeKind.Local).AddTicks(8729)
                        },
                        new
                        {
                            EmployeeId = 3,
                            ProjectId = 2,
                            IsProjectManager = true,
                            LastUpdatedBy = "Peter Ahn",
                            LastUpdatedTime = new DateTime(2020, 4, 3, 12, 21, 38, 308, DateTimeKind.Local).AddTicks(9827)
                        },
                        new
                        {
                            EmployeeId = 5,
                            ProjectId = 2,
                            IsProjectManager = false,
                            LastUpdatedBy = "Peter Ahn",
                            LastUpdatedTime = new DateTime(2020, 4, 3, 12, 21, 38, 309, DateTimeKind.Local).AddTicks(1590)
                        },
                        new
                        {
                            EmployeeId = 5,
                            ProjectId = 3,
                            IsProjectManager = true,
                            LastUpdatedBy = "Peter Ahn",
                            LastUpdatedTime = new DateTime(2020, 4, 3, 12, 21, 38, 309, DateTimeKind.Local).AddTicks(2614)
                        },
                        new
                        {
                            EmployeeId = 3,
                            ProjectId = 3,
                            IsProjectManager = false,
                            LastUpdatedBy = "Peter Ahn",
                            LastUpdatedTime = new DateTime(2020, 4, 3, 12, 21, 38, 309, DateTimeKind.Local).AddTicks(4071)
                        },
                        new
                        {
                            EmployeeId = 4,
                            ProjectId = 3,
                            IsProjectManager = false,
                            LastUpdatedBy = "Peter Ahn",
                            LastUpdatedTime = new DateTime(2020, 4, 3, 12, 21, 38, 309, DateTimeKind.Local).AddTicks(5387)
                        });
                });

            modelBuilder.Entity("COMP4911WebAPI.Models.EmployeeWorkPackageAssignment", b =>
                {
                    b.Property<int>("EmployeeId");

                    b.Property<int>("WorkPackageId");

                    b.Property<string>("LastUpdatedBy");

                    b.Property<DateTime>("LastUpdatedTime");

                    b.HasKey("EmployeeId", "WorkPackageId");

                    b.HasIndex("WorkPackageId");

                    b.ToTable("EmployeeWorkPackageAssignments");

                    b.HasData(
                        new
                        {
                            EmployeeId = 2,
                            WorkPackageId = 1,
                            LastUpdatedBy = "Peter Ahn",
                            LastUpdatedTime = new DateTime(2020, 4, 3, 12, 21, 38, 310, DateTimeKind.Local).AddTicks(8279)
                        },
                        new
                        {
                            EmployeeId = 1,
                            WorkPackageId = 1,
                            LastUpdatedBy = "Peter Ahn",
                            LastUpdatedTime = new DateTime(2020, 4, 3, 12, 21, 38, 311, DateTimeKind.Local).AddTicks(132)
                        },
                        new
                        {
                            EmployeeId = 3,
                            WorkPackageId = 1,
                            LastUpdatedBy = "Peter Ahn",
                            LastUpdatedTime = new DateTime(2020, 4, 3, 12, 21, 38, 311, DateTimeKind.Local).AddTicks(1402)
                        },
                        new
                        {
                            EmployeeId = 3,
                            WorkPackageId = 2,
                            LastUpdatedBy = "Peter Ahn",
                            LastUpdatedTime = new DateTime(2020, 4, 3, 12, 21, 38, 311, DateTimeKind.Local).AddTicks(2474)
                        },
                        new
                        {
                            EmployeeId = 1,
                            WorkPackageId = 2,
                            LastUpdatedBy = "Peter Ahn",
                            LastUpdatedTime = new DateTime(2020, 4, 3, 12, 21, 38, 311, DateTimeKind.Local).AddTicks(3776)
                        },
                        new
                        {
                            EmployeeId = 2,
                            WorkPackageId = 2,
                            LastUpdatedBy = "Peter Ahn",
                            LastUpdatedTime = new DateTime(2020, 4, 3, 12, 21, 38, 311, DateTimeKind.Local).AddTicks(5017)
                        },
                        new
                        {
                            EmployeeId = 3,
                            WorkPackageId = 3,
                            LastUpdatedBy = "Peter Ahn",
                            LastUpdatedTime = new DateTime(2020, 4, 3, 12, 21, 38, 311, DateTimeKind.Local).AddTicks(6085)
                        },
                        new
                        {
                            EmployeeId = 4,
                            WorkPackageId = 3,
                            LastUpdatedBy = "Peter Ahn",
                            LastUpdatedTime = new DateTime(2020, 4, 3, 12, 21, 38, 311, DateTimeKind.Local).AddTicks(7147)
                        },
                        new
                        {
                            EmployeeId = 5,
                            WorkPackageId = 4,
                            LastUpdatedBy = "Peter Ahn",
                            LastUpdatedTime = new DateTime(2020, 4, 3, 12, 21, 38, 311, DateTimeKind.Local).AddTicks(8214)
                        },
                        new
                        {
                            EmployeeId = 5,
                            WorkPackageId = 5,
                            LastUpdatedBy = "Peter Ahn",
                            LastUpdatedTime = new DateTime(2020, 4, 3, 12, 21, 38, 311, DateTimeKind.Local).AddTicks(9290)
                        },
                        new
                        {
                            EmployeeId = 2,
                            WorkPackageId = 5,
                            LastUpdatedBy = "Peter Ahn",
                            LastUpdatedTime = new DateTime(2020, 4, 3, 12, 21, 38, 312, DateTimeKind.Local).AddTicks(353)
                        },
                        new
                        {
                            EmployeeId = 5,
                            WorkPackageId = 6,
                            LastUpdatedBy = "Peter Ahn",
                            LastUpdatedTime = new DateTime(2020, 4, 3, 12, 21, 38, 312, DateTimeKind.Local).AddTicks(1415)
                        },
                        new
                        {
                            EmployeeId = 3,
                            WorkPackageId = 7,
                            LastUpdatedBy = "Peter Ahn",
                            LastUpdatedTime = new DateTime(2020, 4, 3, 12, 21, 38, 312, DateTimeKind.Local).AddTicks(2477)
                        },
                        new
                        {
                            EmployeeId = 4,
                            WorkPackageId = 7,
                            LastUpdatedBy = "Peter Ahn",
                            LastUpdatedTime = new DateTime(2020, 4, 3, 12, 21, 38, 312, DateTimeKind.Local).AddTicks(3941)
                        },
                        new
                        {
                            EmployeeId = 1,
                            WorkPackageId = 8,
                            LastUpdatedBy = "Peter Ahn",
                            LastUpdatedTime = new DateTime(2020, 4, 3, 12, 21, 38, 312, DateTimeKind.Local).AddTicks(5003)
                        },
                        new
                        {
                            EmployeeId = 2,
                            WorkPackageId = 8,
                            LastUpdatedBy = "Peter Ahn",
                            LastUpdatedTime = new DateTime(2020, 4, 3, 12, 21, 38, 312, DateTimeKind.Local).AddTicks(6062)
                        },
                        new
                        {
                            EmployeeId = 3,
                            WorkPackageId = 8,
                            LastUpdatedBy = "Peter Ahn",
                            LastUpdatedTime = new DateTime(2020, 4, 3, 12, 21, 38, 312, DateTimeKind.Local).AddTicks(7120)
                        });
                });

            modelBuilder.Entity("COMP4911WebAPI.Models.JobTitle", b =>
                {
                    b.Property<int>("JobTitleId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("JobTitleName");

                    b.Property<string>("LastUpdatedBy");

                    b.Property<DateTime>("LastUpdatedTime");

                    b.HasKey("JobTitleId");

                    b.ToTable("JobTitles");

                    b.HasData(
                        new
                        {
                            JobTitleId = 1,
                            JobTitleName = "Software Developer",
                            LastUpdatedBy = "Peter Ahn",
                            LastUpdatedTime = new DateTime(2020, 4, 3, 12, 21, 38, 303, DateTimeKind.Local).AddTicks(1408)
                        },
                        new
                        {
                            JobTitleId = 2,
                            JobTitleName = "Q/A Analyst",
                            LastUpdatedBy = "Peter Ahn",
                            LastUpdatedTime = new DateTime(2020, 4, 3, 12, 21, 38, 304, DateTimeKind.Local).AddTicks(8703)
                        },
                        new
                        {
                            JobTitleId = 3,
                            JobTitleName = "Business Analyst",
                            LastUpdatedBy = "Peter Ahn",
                            LastUpdatedTime = new DateTime(2020, 4, 3, 12, 21, 38, 304, DateTimeKind.Local).AddTicks(9788)
                        });
                });

            modelBuilder.Entity("COMP4911WebAPI.Models.LabourGrade", b =>
                {
                    b.Property<int>("LabourGradeId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("HourlyWage");

                    b.Property<string>("LabourGradeCode");

                    b.Property<string>("LastUpdatedBy");

                    b.Property<DateTime>("LastUpdatedTime");

                    b.HasKey("LabourGradeId");

                    b.ToTable("LabourGrades");

                    b.HasData(
                        new
                        {
                            LabourGradeId = 1,
                            HourlyWage = 22.0,
                            LabourGradeCode = "P1",
                            LastUpdatedBy = "seeded",
                            LastUpdatedTime = new DateTime(2020, 4, 3, 12, 21, 38, 305, DateTimeKind.Local).AddTicks(6797)
                        },
                        new
                        {
                            LabourGradeId = 2,
                            HourlyWage = 23.0,
                            LabourGradeCode = "P2",
                            LastUpdatedBy = "seeded",
                            LastUpdatedTime = new DateTime(2020, 4, 3, 12, 21, 38, 305, DateTimeKind.Local).AddTicks(7850)
                        },
                        new
                        {
                            LabourGradeId = 3,
                            HourlyWage = 10.0,
                            LabourGradeCode = "P3",
                            LastUpdatedBy = "seeded",
                            LastUpdatedTime = new DateTime(2020, 4, 3, 12, 21, 38, 305, DateTimeKind.Local).AddTicks(7863)
                        },
                        new
                        {
                            LabourGradeId = 4,
                            HourlyWage = 8.0,
                            LabourGradeCode = "P4",
                            LastUpdatedBy = "seeded",
                            LastUpdatedTime = new DateTime(2020, 4, 3, 12, 21, 38, 305, DateTimeKind.Local).AddTicks(7866)
                        },
                        new
                        {
                            LabourGradeId = 5,
                            HourlyWage = 25.0,
                            LabourGradeCode = "SS",
                            LastUpdatedBy = "seeded",
                            LastUpdatedTime = new DateTime(2020, 4, 3, 12, 21, 38, 305, DateTimeKind.Local).AddTicks(7869)
                        },
                        new
                        {
                            LabourGradeId = 6,
                            HourlyWage = 35.0,
                            LabourGradeCode = "DD",
                            LastUpdatedBy = "seeded",
                            LastUpdatedTime = new DateTime(2020, 4, 3, 12, 21, 38, 305, DateTimeKind.Local).AddTicks(7871)
                        });
                });

            modelBuilder.Entity("COMP4911WebAPI.Models.Project", b =>
                {
                    b.Property<int>("ProjectId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Budget");

                    b.Property<DateTime>("EndDate");

                    b.Property<bool>("IsClosed");

                    b.Property<string>("LastUpdatedBy");

                    b.Property<DateTime>("LastUpdatedTime");

                    b.Property<int>("ProjectCode");

                    b.Property<string>("ProjectDescription")
                        .IsRequired();

                    b.Property<int>("ProjectManagerId");

                    b.Property<string>("ProjectName")
                        .IsRequired();

                    b.Property<DateTime>("StartDate");

                    b.HasKey("ProjectId");

                    b.ToTable("Projects");

                    b.HasData(
                        new
                        {
                            ProjectId = 1,
                            Budget = 1337.0,
                            EndDate = new DateTime(2020, 4, 3, 12, 21, 38, 307, DateTimeKind.Local).AddTicks(1406),
                            IsClosed = false,
                            LastUpdatedBy = "seeded",
                            LastUpdatedTime = new DateTime(2020, 4, 3, 12, 21, 38, 307, DateTimeKind.Local).AddTicks(6591),
                            ProjectCode = 111,
                            ProjectDescription = "NewProjectDescription1",
                            ProjectManagerId = 2,
                            ProjectName = "NewProject1",
                            StartDate = new DateTime(2020, 4, 3, 12, 21, 38, 307, DateTimeKind.Local).AddTicks(1402)
                        },
                        new
                        {
                            ProjectId = 2,
                            Budget = 1337.0,
                            EndDate = new DateTime(2020, 2, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsClosed = false,
                            LastUpdatedBy = "seeded",
                            LastUpdatedTime = new DateTime(2020, 4, 3, 12, 21, 38, 308, DateTimeKind.Local).AddTicks(1537),
                            ProjectCode = 222,
                            ProjectDescription = "ProjectDescription3",
                            ProjectManagerId = 2,
                            ProjectName = "ProjectName2",
                            StartDate = new DateTime(2020, 2, 2, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ProjectId = 3,
                            Budget = 1337.0,
                            EndDate = new DateTime(2020, 3, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsClosed = false,
                            LastUpdatedBy = "seeded",
                            LastUpdatedTime = new DateTime(2020, 4, 3, 12, 21, 38, 308, DateTimeKind.Local).AddTicks(1567),
                            ProjectCode = 333,
                            ProjectDescription = "ProjectDescription3",
                            ProjectManagerId = 3,
                            ProjectName = "ProjectName3",
                            StartDate = new DateTime(2020, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ProjectId = 4,
                            Budget = 1337.0,
                            EndDate = new DateTime(2100, 3, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsClosed = false,
                            LastUpdatedBy = "seeded",
                            LastUpdatedTime = new DateTime(2020, 4, 3, 12, 21, 38, 308, DateTimeKind.Local).AddTicks(1578),
                            ProjectCode = 123,
                            ProjectDescription = "Sick Description",
                            ProjectManagerId = 1,
                            ProjectName = "Sick",
                            StartDate = new DateTime(1900, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ProjectId = 5,
                            Budget = 1337.0,
                            EndDate = new DateTime(2100, 3, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsClosed = false,
                            LastUpdatedBy = "seeded",
                            LastUpdatedTime = new DateTime(2020, 4, 3, 12, 21, 38, 308, DateTimeKind.Local).AddTicks(1587),
                            ProjectCode = 555,
                            ProjectDescription = "Vacation Description",
                            ProjectManagerId = 1,
                            ProjectName = "Vacation",
                            StartDate = new DateTime(1900, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("COMP4911WebAPI.Models.ProjectReport", b =>
                {
                    b.Property<int>("ProjectReportId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("EndDate");

                    b.Property<int>("ProjectCode");

                    b.Property<int>("ProjectId");

                    b.Property<string>("ProjectName")
                        .IsRequired();

                    b.Property<DateTime>("ReportDate");

                    b.Property<DateTime>("StartDate");

                    b.HasKey("ProjectReportId");

                    b.ToTable("ProjectReport");
                });

            modelBuilder.Entity("COMP4911WebAPI.Models.Timesheet", b =>
                {
                    b.Property<int>("TimesheetId");

                    b.Property<int>("VersionNumber");

                    b.Property<string>("Comment");

                    b.Property<int>("EmployeeId");

                    b.Property<double>("FlexTime");

                    b.Property<string>("LastUpdatedBy");

                    b.Property<DateTime>("LastUpdatedTime");

                    b.Property<double>("OverTime");

                    b.Property<int>("Status");

                    b.Property<DateTime>("WeekEndingIn");

                    b.Property<int>("WeekNumber");

                    b.HasKey("TimesheetId", "VersionNumber");

                    b.HasIndex("EmployeeId");

                    b.ToTable("Timesheets");

                    b.HasData(
                        new
                        {
                            TimesheetId = 1,
                            VersionNumber = 1,
                            Comment = "seeded comment",
                            EmployeeId = 2,
                            FlexTime = 2.0,
                            LastUpdatedBy = "Seeded",
                            LastUpdatedTime = new DateTime(2020, 4, 3, 12, 21, 38, 313, DateTimeKind.Local).AddTicks(7321),
                            OverTime = 1.0,
                            Status = 2,
                            WeekEndingIn = new DateTime(2020, 5, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            WeekNumber = 10
                        },
                        new
                        {
                            TimesheetId = 2,
                            VersionNumber = 1,
                            Comment = "seeded comment",
                            EmployeeId = 3,
                            FlexTime = 2.0,
                            LastUpdatedBy = "Seeded",
                            LastUpdatedTime = new DateTime(2020, 4, 3, 12, 21, 38, 313, DateTimeKind.Local).AddTicks(9553),
                            OverTime = 1.0,
                            Status = 2,
                            WeekEndingIn = new DateTime(2020, 5, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            WeekNumber = 10
                        },
                        new
                        {
                            TimesheetId = 2,
                            VersionNumber = 2,
                            Comment = "seeded comment",
                            EmployeeId = 3,
                            FlexTime = 2.0,
                            LastUpdatedBy = "Seeded",
                            LastUpdatedTime = new DateTime(2020, 4, 3, 12, 21, 38, 313, DateTimeKind.Local).AddTicks(9580),
                            OverTime = 1.0,
                            Status = 2,
                            WeekEndingIn = new DateTime(2020, 5, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            WeekNumber = 10
                        },
                        new
                        {
                            TimesheetId = 3,
                            VersionNumber = 1,
                            Comment = "seeded comment",
                            EmployeeId = 3,
                            FlexTime = 2.0,
                            LastUpdatedBy = "Seeded",
                            LastUpdatedTime = new DateTime(2020, 4, 3, 12, 21, 38, 313, DateTimeKind.Local).AddTicks(9588),
                            OverTime = 1.0,
                            Status = 2,
                            WeekEndingIn = new DateTime(2020, 5, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            WeekNumber = 11
                        },
                        new
                        {
                            TimesheetId = 4,
                            VersionNumber = 1,
                            Comment = "seeded comment",
                            EmployeeId = 2,
                            FlexTime = 2.0,
                            LastUpdatedBy = "Seeded",
                            LastUpdatedTime = new DateTime(2020, 4, 3, 12, 21, 38, 313, DateTimeKind.Local).AddTicks(9594),
                            OverTime = 1.0,
                            Status = 1,
                            WeekEndingIn = new DateTime(2020, 5, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            WeekNumber = 11
                        },
                        new
                        {
                            TimesheetId = 5,
                            VersionNumber = 1,
                            Comment = "seeded comment",
                            EmployeeId = 5,
                            FlexTime = 2.0,
                            LastUpdatedBy = "Seeded",
                            LastUpdatedTime = new DateTime(2020, 4, 3, 12, 21, 38, 313, DateTimeKind.Local).AddTicks(9600),
                            OverTime = 1.0,
                            Status = 2,
                            WeekEndingIn = new DateTime(2020, 5, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            WeekNumber = 11
                        },
                        new
                        {
                            TimesheetId = 6,
                            VersionNumber = 1,
                            Comment = "seeded comment",
                            EmployeeId = 3,
                            FlexTime = 2.0,
                            LastUpdatedBy = "Seeded",
                            LastUpdatedTime = new DateTime(2020, 4, 3, 12, 21, 38, 313, DateTimeKind.Local).AddTicks(9605),
                            OverTime = 1.0,
                            Status = 2,
                            WeekEndingIn = new DateTime(2020, 5, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            WeekNumber = 9
                        },
                        new
                        {
                            TimesheetId = 7,
                            VersionNumber = 1,
                            Comment = "seeded comment",
                            EmployeeId = 1,
                            FlexTime = 2.0,
                            LastUpdatedBy = "Seeded",
                            LastUpdatedTime = new DateTime(2020, 4, 3, 12, 21, 38, 313, DateTimeKind.Local).AddTicks(9612),
                            OverTime = 1.0,
                            Status = 2,
                            WeekEndingIn = new DateTime(2020, 4, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            WeekNumber = 7
                        },
                        new
                        {
                            TimesheetId = 8,
                            VersionNumber = 1,
                            Comment = "seeded comment",
                            EmployeeId = 1,
                            FlexTime = 2.0,
                            LastUpdatedBy = "Seeded",
                            LastUpdatedTime = new DateTime(2020, 4, 3, 12, 21, 38, 313, DateTimeKind.Local).AddTicks(9618),
                            OverTime = 1.0,
                            Status = 3,
                            WeekEndingIn = new DateTime(2020, 4, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            WeekNumber = 8
                        },
                        new
                        {
                            TimesheetId = 8,
                            VersionNumber = 2,
                            Comment = "seeded comment",
                            EmployeeId = 1,
                            FlexTime = 2.0,
                            LastUpdatedBy = "Seeded",
                            LastUpdatedTime = new DateTime(2020, 4, 3, 12, 21, 38, 313, DateTimeKind.Local).AddTicks(9624),
                            OverTime = 1.0,
                            Status = 2,
                            WeekEndingIn = new DateTime(2020, 4, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            WeekNumber = 8
                        });
                });

            modelBuilder.Entity("COMP4911WebAPI.Models.TimesheetRow", b =>
                {
                    b.Property<int>("TimesheetRowId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Friday");

                    b.Property<string>("LastUpdatedBy");

                    b.Property<DateTime>("LastUpdatedTime");

                    b.Property<double>("Monday");

                    b.Property<string>("Notes");

                    b.Property<double>("Saturday");

                    b.Property<double>("Sunday");

                    b.Property<double>("Thursday");

                    b.Property<int>("TimesheetId");

                    b.Property<int>("TimesheetVersionNumber");

                    b.Property<double>("Tuesday");

                    b.Property<double>("Wednesday");

                    b.Property<int>("WorkPackageId");

                    b.HasKey("TimesheetRowId");

                    b.HasIndex("WorkPackageId");

                    b.HasIndex("TimesheetId", "TimesheetVersionNumber");

                    b.ToTable("TimesheetRows");

                    b.HasData(
                        new
                        {
                            TimesheetRowId = 1,
                            Friday = 7.0,
                            LastUpdatedBy = "Seeded",
                            LastUpdatedTime = new DateTime(2020, 4, 3, 12, 21, 38, 314, DateTimeKind.Local).AddTicks(6935),
                            Monday = 3.0,
                            Notes = "dota is best",
                            Saturday = 8.0,
                            Sunday = 9.0,
                            Thursday = 6.0,
                            TimesheetId = 1,
                            TimesheetVersionNumber = 1,
                            Tuesday = 4.0,
                            Wednesday = 5.0,
                            WorkPackageId = 2
                        },
                        new
                        {
                            TimesheetRowId = 2,
                            Friday = 3.0,
                            LastUpdatedBy = "Seeded",
                            LastUpdatedTime = new DateTime(2020, 4, 3, 12, 21, 38, 314, DateTimeKind.Local).AddTicks(7918),
                            Monday = 3.0,
                            Notes = "PIG GOD!!!",
                            Saturday = 3.0,
                            Sunday = 3.0,
                            Thursday = 3.0,
                            TimesheetId = 1,
                            TimesheetVersionNumber = 1,
                            Tuesday = 3.0,
                            Wednesday = 3.0,
                            WorkPackageId = 3
                        },
                        new
                        {
                            TimesheetRowId = 3,
                            Friday = 3.0,
                            LastUpdatedBy = "Seeded",
                            LastUpdatedTime = new DateTime(2020, 4, 3, 12, 21, 38, 314, DateTimeKind.Local).AddTicks(7933),
                            Monday = 3.0,
                            Notes = "NEZUKO",
                            Saturday = 3.0,
                            Sunday = 3.0,
                            Thursday = 3.0,
                            TimesheetId = 2,
                            TimesheetVersionNumber = 1,
                            Tuesday = 3.0,
                            Wednesday = 3.0,
                            WorkPackageId = 5
                        },
                        new
                        {
                            TimesheetRowId = 4,
                            Friday = 3.0,
                            LastUpdatedBy = "Seeded",
                            LastUpdatedTime = new DateTime(2020, 4, 3, 12, 21, 38, 314, DateTimeKind.Local).AddTicks(7936),
                            Monday = 3.0,
                            Notes = "clannad",
                            Saturday = 3.0,
                            Sunday = 3.0,
                            Thursday = 3.0,
                            TimesheetId = 2,
                            TimesheetVersionNumber = 2,
                            Tuesday = 3.0,
                            Wednesday = 3.0,
                            WorkPackageId = 3
                        },
                        new
                        {
                            TimesheetRowId = 5,
                            Friday = 3.0,
                            LastUpdatedBy = "Seeded",
                            LastUpdatedTime = new DateTime(2020, 4, 3, 12, 21, 38, 314, DateTimeKind.Local).AddTicks(7939),
                            Monday = 3.0,
                            Notes = "emp3note",
                            Saturday = 3.0,
                            Sunday = 3.0,
                            Thursday = 8.0,
                            TimesheetId = 3,
                            TimesheetVersionNumber = 1,
                            Tuesday = 3.0,
                            Wednesday = 8.0,
                            WorkPackageId = 7
                        },
                        new
                        {
                            TimesheetRowId = 6,
                            Friday = 3.0,
                            LastUpdatedBy = "Seeded",
                            LastUpdatedTime = new DateTime(2020, 4, 3, 12, 21, 38, 314, DateTimeKind.Local).AddTicks(7942),
                            Monday = 3.0,
                            Notes = "forRen",
                            Saturday = 3.0,
                            Sunday = 3.0,
                            Thursday = 8.0,
                            TimesheetId = 7,
                            TimesheetVersionNumber = 1,
                            Tuesday = 3.0,
                            Wednesday = 8.0,
                            WorkPackageId = 8
                        },
                        new
                        {
                            TimesheetRowId = 7,
                            Friday = 1.0,
                            LastUpdatedBy = "Seeded",
                            LastUpdatedTime = new DateTime(2020, 4, 3, 12, 21, 38, 314, DateTimeKind.Local).AddTicks(7944),
                            Monday = 5.0,
                            Notes = "forRen",
                            Saturday = 3.0,
                            Sunday = 3.0,
                            Thursday = 8.0,
                            TimesheetId = 7,
                            TimesheetVersionNumber = 1,
                            Tuesday = 7.0,
                            Wednesday = 8.0,
                            WorkPackageId = 1
                        },
                        new
                        {
                            TimesheetRowId = 8,
                            Friday = 3.0,
                            LastUpdatedBy = "Seeded",
                            LastUpdatedTime = new DateTime(2020, 4, 3, 12, 21, 38, 314, DateTimeKind.Local).AddTicks(7947),
                            Monday = 6.0,
                            Notes = "forRen",
                            Saturday = 3.0,
                            Sunday = 3.0,
                            Thursday = 2.0,
                            TimesheetId = 7,
                            TimesheetVersionNumber = 1,
                            Tuesday = 7.0,
                            Wednesday = 5.0,
                            WorkPackageId = 2
                        });
                });

            modelBuilder.Entity("COMP4911WebAPI.Models.WorkPackage", b =>
                {
                    b.Property<int>("WorkPackageId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Contractor");

                    b.Property<string>("Description")
                        .IsRequired();

                    b.Property<bool>("IsClosed");

                    b.Property<DateTime>("IssueDate");

                    b.Property<string>("LastUpdatedBy");

                    b.Property<DateTime>("LastUpdatedTime");

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<int?>("ParentWorkPackageId");

                    b.Property<int>("ProjectId");

                    b.Property<int>("ResponsibleEngineerId");

                    b.Property<string>("WorkPackageCode")
                        .IsRequired();

                    b.HasKey("WorkPackageId");

                    b.HasIndex("ParentWorkPackageId");

                    b.HasIndex("ProjectId");

                    b.ToTable("WorkPackages");

                    b.HasData(
                        new
                        {
                            WorkPackageId = 1,
                            Description = "WpDescription1Root",
                            IsClosed = false,
                            IssueDate = new DateTime(2020, 2, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastUpdatedBy = "Seeded",
                            LastUpdatedTime = new DateTime(2020, 4, 3, 12, 21, 38, 310, DateTimeKind.Local).AddTicks(2650),
                            Name = "WpName1Root",
                            ProjectId = 1,
                            ResponsibleEngineerId = 2,
                            WorkPackageCode = "A"
                        },
                        new
                        {
                            WorkPackageId = 2,
                            Description = "WpDescription1Child1",
                            IsClosed = false,
                            IssueDate = new DateTime(2020, 2, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastUpdatedBy = "Seeded",
                            LastUpdatedTime = new DateTime(2020, 4, 3, 12, 21, 38, 310, DateTimeKind.Local).AddTicks(4041),
                            Name = "WpName1Child1",
                            ParentWorkPackageId = 1,
                            ProjectId = 1,
                            ResponsibleEngineerId = 2,
                            WorkPackageCode = "AB"
                        },
                        new
                        {
                            WorkPackageId = 3,
                            Description = "WpDescription2Root",
                            IsClosed = false,
                            IssueDate = new DateTime(2020, 2, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastUpdatedBy = "Seeded",
                            LastUpdatedTime = new DateTime(2020, 4, 3, 12, 21, 38, 310, DateTimeKind.Local).AddTicks(4063),
                            Name = "WpName2Root",
                            ProjectId = 2,
                            ResponsibleEngineerId = 3,
                            WorkPackageCode = "B"
                        },
                        new
                        {
                            WorkPackageId = 4,
                            Description = "WpDescription2Child1",
                            IsClosed = false,
                            IssueDate = new DateTime(2020, 2, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastUpdatedBy = "Seeded",
                            LastUpdatedTime = new DateTime(2020, 4, 3, 12, 21, 38, 310, DateTimeKind.Local).AddTicks(4070),
                            Name = "WpName2Child1",
                            ParentWorkPackageId = 3,
                            ProjectId = 2,
                            ResponsibleEngineerId = 5,
                            WorkPackageCode = "BA"
                        },
                        new
                        {
                            WorkPackageId = 5,
                            Description = "WpDescription2ChildChild1",
                            IsClosed = false,
                            IssueDate = new DateTime(2020, 2, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastUpdatedBy = "Seeded",
                            LastUpdatedTime = new DateTime(2020, 4, 3, 12, 21, 38, 310, DateTimeKind.Local).AddTicks(4078),
                            Name = "WpName2ChildChild1",
                            ParentWorkPackageId = 4,
                            ProjectId = 2,
                            ResponsibleEngineerId = 2,
                            WorkPackageCode = "BAA"
                        },
                        new
                        {
                            WorkPackageId = 6,
                            Description = "WpDescription2Child2",
                            IsClosed = false,
                            IssueDate = new DateTime(2020, 2, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastUpdatedBy = "Seeded",
                            LastUpdatedTime = new DateTime(2020, 4, 3, 12, 21, 38, 310, DateTimeKind.Local).AddTicks(4085),
                            Name = "WpName2Child2",
                            ParentWorkPackageId = 3,
                            ProjectId = 2,
                            ResponsibleEngineerId = 5,
                            WorkPackageCode = "BB"
                        },
                        new
                        {
                            WorkPackageId = 7,
                            Description = "WpDescription3Root",
                            IsClosed = false,
                            IssueDate = new DateTime(2020, 2, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastUpdatedBy = "Seeded",
                            LastUpdatedTime = new DateTime(2020, 4, 3, 12, 21, 38, 310, DateTimeKind.Local).AddTicks(4093),
                            Name = "WpName3Root",
                            ProjectId = 3,
                            ResponsibleEngineerId = 4,
                            WorkPackageCode = "C"
                        },
                        new
                        {
                            WorkPackageId = 8,
                            Description = "Hi Ren",
                            IsClosed = false,
                            IssueDate = new DateTime(2020, 2, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastUpdatedBy = "Seeded",
                            LastUpdatedTime = new DateTime(2020, 4, 3, 12, 21, 38, 310, DateTimeKind.Local).AddTicks(4100),
                            Name = "RenWorkPackage",
                            ParentWorkPackageId = 7,
                            ProjectId = 3,
                            ResponsibleEngineerId = 1,
                            WorkPackageCode = "CA"
                        },
                        new
                        {
                            WorkPackageId = 9,
                            Description = "SickDescription",
                            IsClosed = false,
                            IssueDate = new DateTime(2020, 2, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastUpdatedBy = "Seeded",
                            LastUpdatedTime = new DateTime(2020, 4, 3, 12, 21, 38, 310, DateTimeKind.Local).AddTicks(4107),
                            Name = "Sick",
                            ProjectId = 4,
                            ResponsibleEngineerId = 1,
                            WorkPackageCode = "Sick"
                        },
                        new
                        {
                            WorkPackageId = 10,
                            Description = "VacationPackage",
                            IsClosed = false,
                            IssueDate = new DateTime(2020, 2, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastUpdatedBy = "Seeded",
                            LastUpdatedTime = new DateTime(2020, 4, 3, 12, 21, 38, 310, DateTimeKind.Local).AddTicks(4113),
                            Name = "Vacation",
                            ProjectId = 5,
                            ResponsibleEngineerId = 1,
                            WorkPackageCode = "Vacation"
                        });
                });

            modelBuilder.Entity("COMP4911WebAPI.Models.WorkPackageLabourGradeAssignment", b =>
                {
                    b.Property<int>("WorkPackageId");

                    b.Property<int>("LabourGradeId");

                    b.Property<string>("LastUpdatedBy");

                    b.Property<DateTime>("LastUpdatedTime");

                    b.Property<double?>("pmEAC");

                    b.Property<double?>("reBudget");

                    b.HasKey("WorkPackageId", "LabourGradeId");

                    b.HasIndex("LabourGradeId");

                    b.ToTable("WorkPackageLabourGradeAssignment");

                    b.HasData(
                        new
                        {
                            WorkPackageId = 1,
                            LabourGradeId = 1,
                            LastUpdatedBy = "seeded",
                            LastUpdatedTime = new DateTime(2020, 4, 3, 12, 21, 38, 313, DateTimeKind.Local).AddTicks(1047),
                            pmEAC = 10.0,
                            reBudget = 8.0
                        },
                        new
                        {
                            WorkPackageId = 2,
                            LabourGradeId = 1,
                            LastUpdatedBy = "seeded",
                            LastUpdatedTime = new DateTime(2020, 4, 3, 12, 21, 38, 313, DateTimeKind.Local).AddTicks(2079),
                            pmEAC = 30.0,
                            reBudget = 80.0
                        },
                        new
                        {
                            WorkPackageId = 2,
                            LabourGradeId = 2,
                            LastUpdatedBy = "seeded",
                            LastUpdatedTime = new DateTime(2020, 4, 3, 12, 21, 38, 313, DateTimeKind.Local).AddTicks(2093),
                            pmEAC = 55.5,
                            reBudget = 66.599999999999994
                        });
                });

            modelBuilder.Entity("COMP4911WebAPI.Models.WorkPackageReport", b =>
                {
                    b.Property<int>("WorkPackageReportId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Comment");

                    b.Property<DateTime>("EndDate");

                    b.Property<string>("LastUpdatedBy");

                    b.Property<DateTime>("LastUpdatedTime");

                    b.Property<string>("ProblemsAnticipated");

                    b.Property<string>("ProblemsThisPeriod");

                    b.Property<DateTime>("ReportDate");

                    b.Property<DateTime>("StartDate");

                    b.Property<string>("WorkAccomplished");

                    b.Property<int>("WorkPackageId");

                    b.Property<string>("WorkPlanned");

                    b.HasKey("WorkPackageReportId");

                    b.HasIndex("WorkPackageId");

                    b.ToTable("WorkPackageReports");

                    b.HasData(
                        new
                        {
                            WorkPackageReportId = 1,
                            Comment = "seeded comment",
                            EndDate = new DateTime(2020, 2, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastUpdatedBy = "seeded",
                            LastUpdatedTime = new DateTime(2020, 4, 3, 12, 21, 38, 315, DateTimeKind.Local).AddTicks(5292),
                            ProblemsAnticipated = "seeded anticipated",
                            ProblemsThisPeriod = "seeded problems",
                            ReportDate = new DateTime(2020, 3, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            StartDate = new DateTime(2020, 2, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            WorkAccomplished = "seeded stuff",
                            WorkPackageId = 2,
                            WorkPlanned = "seeded planned"
                        },
                        new
                        {
                            WorkPackageReportId = 2,
                            Comment = "seeded comment 2",
                            EndDate = new DateTime(2020, 2, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastUpdatedBy = "seeded",
                            LastUpdatedTime = new DateTime(2020, 4, 3, 12, 21, 38, 315, DateTimeKind.Local).AddTicks(5822),
                            ProblemsAnticipated = "seeded anticipated 2",
                            ProblemsThisPeriod = "seeded problems2",
                            ReportDate = new DateTime(2020, 3, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            StartDate = new DateTime(2020, 2, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            WorkAccomplished = "seeded workaccomplished 2",
                            WorkPackageId = 5,
                            WorkPlanned = "seeded workplanned2"
                        });
                });

            modelBuilder.Entity("COMP4911WebAPI.Models.WorkPackageReportDetails", b =>
                {
                    b.Property<int>("WorkPackageReportDetailsId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("CompletionPercent");

                    b.Property<int>("LabourGradeId");

                    b.Property<string>("LabourGradeName");

                    b.Property<string>("LastUpdatedBy");

                    b.Property<DateTime>("LastUpdatedTime");

                    b.Property<double>("ReEstimateAtCompletion");

                    b.Property<double>("ReEstimateToCompletion");

                    b.Property<double>("ResponsibleEngineerBudgetInDays");

                    b.Property<double>("TotalDays");

                    b.Property<double>("VariancePercent");

                    b.Property<int>("WorkPackageReportId");

                    b.HasKey("WorkPackageReportDetailsId");

                    b.HasIndex("WorkPackageReportId");

                    b.ToTable("WorkPackageReportDetails");

                    b.HasData(
                        new
                        {
                            WorkPackageReportDetailsId = 1,
                            CompletionPercent = 90.0,
                            LabourGradeId = 3,
                            LabourGradeName = "labourgrade3name",
                            LastUpdatedBy = "seeded",
                            LastUpdatedTime = new DateTime(2020, 4, 3, 12, 21, 38, 316, DateTimeKind.Local).AddTicks(2199),
                            ReEstimateAtCompletion = 8.0,
                            ReEstimateToCompletion = 21.5,
                            ResponsibleEngineerBudgetInDays = 20.5,
                            TotalDays = 50.0,
                            VariancePercent = 30.0,
                            WorkPackageReportId = 1
                        },
                        new
                        {
                            WorkPackageReportDetailsId = 2,
                            CompletionPercent = 50.0,
                            LabourGradeId = 4,
                            LabourGradeName = "labourgrade4name",
                            LastUpdatedBy = "seeded",
                            LastUpdatedTime = new DateTime(2020, 4, 3, 12, 21, 38, 316, DateTimeKind.Local).AddTicks(2719),
                            ReEstimateAtCompletion = 42.0,
                            ReEstimateToCompletion = 42.0,
                            ResponsibleEngineerBudgetInDays = 19.0,
                            TotalDays = 19.5,
                            VariancePercent = 50.0,
                            WorkPackageReportId = 1
                        });
                });

            modelBuilder.Entity("COMP4911WebAPI.Models.WorkPackageReportSnapshot", b =>
                {
                    b.Property<int>("WorkPackageReportSnapshotId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("EngineerInitials");

                    b.Property<bool>("IsClosed");

                    b.Property<bool>("IsHighWorkPackage");

                    b.Property<int>("ProjectReportId");

                    b.Property<double>("WorkPackageActualSpends");

                    b.Property<string>("WorkPackageCode");

                    b.Property<int>("WorkPackageId");

                    b.Property<double>("WorkPackageProjectManagerEstimateAtCompletion");

                    b.Property<DateTime>("WorkPackageReportSnapshotDate");

                    b.Property<double>("WorkPackageResponsibleEngineerBudget");

                    b.Property<double>("WorkPackageResponsibleEngineerEstimateAtCompletion");

                    b.Property<string>("WorkPackageTitle");

                    b.Property<double>("WpPmCompletion");

                    b.Property<double>("WpPmVariance");

                    b.Property<double>("WpReCompletion");

                    b.Property<double>("WpReVariance");

                    b.HasKey("WorkPackageReportSnapshotId");

                    b.ToTable("WorkPackageReportSnapshot");
                });

            modelBuilder.Entity("COMP4911WebAPI.Models.Credential", b =>
                {
                    b.HasOne("COMP4911WebAPI.Models.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("COMP4911WebAPI.Models.Employee", b =>
                {
                    b.HasOne("COMP4911WebAPI.Models.JobTitle", "JobTitle")
                        .WithMany()
                        .HasForeignKey("JobTitleId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("COMP4911WebAPI.Models.LabourGrade", "LabourGrade")
                        .WithMany()
                        .HasForeignKey("LabourGradeId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("COMP4911WebAPI.Models.LabourGrade")
                        .WithMany("Employee")
                        .HasForeignKey("LabourGradeId1");

                    b.HasOne("COMP4911WebAPI.Models.Employee", "Supervisor")
                        .WithMany()
                        .HasForeignKey("SupervisorId");

                    b.HasOne("COMP4911WebAPI.Models.Employee", "TimesheetApprover")
                        .WithMany()
                        .HasForeignKey("TimesheetApproverId");
                });

            modelBuilder.Entity("COMP4911WebAPI.Models.EmployeeProjectAssignment", b =>
                {
                    b.HasOne("COMP4911WebAPI.Models.Employee", "Employee")
                        .WithMany("EmployeeProjectAssignments")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("COMP4911WebAPI.Models.Project", "Project")
                        .WithMany("EmployeeProjectAssignments")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("COMP4911WebAPI.Models.EmployeeWorkPackageAssignment", b =>
                {
                    b.HasOne("COMP4911WebAPI.Models.Employee", "Employee")
                        .WithMany("EmployeeWorkPackageAssignments")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("COMP4911WebAPI.Models.WorkPackage", "WorkPackage")
                        .WithMany("EmployeeWorkPackageAssignments")
                        .HasForeignKey("WorkPackageId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("COMP4911WebAPI.Models.Timesheet", b =>
                {
                    b.HasOne("COMP4911WebAPI.Models.Employee", "Employee")
                        .WithMany("Timesheets")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("COMP4911WebAPI.Models.TimesheetRow", b =>
                {
                    b.HasOne("COMP4911WebAPI.Models.WorkPackage", "WorkPackage")
                        .WithMany("TimesheetRows")
                        .HasForeignKey("WorkPackageId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("COMP4911WebAPI.Models.Timesheet", "Timesheet")
                        .WithMany("TimesheetRows")
                        .HasForeignKey("TimesheetId", "TimesheetVersionNumber")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("COMP4911WebAPI.Models.WorkPackage", b =>
                {
                    b.HasOne("COMP4911WebAPI.Models.WorkPackage", "ParentWorkPackage")
                        .WithMany("ChildrenWorkPackages")
                        .HasForeignKey("ParentWorkPackageId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("COMP4911WebAPI.Models.Project", "Project")
                        .WithMany("WorkPackages")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("COMP4911WebAPI.Models.WorkPackageLabourGradeAssignment", b =>
                {
                    b.HasOne("COMP4911WebAPI.Models.LabourGrade", "LabourGrade")
                        .WithMany("WorkPackageLabourGradeAssignments")
                        .HasForeignKey("LabourGradeId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("COMP4911WebAPI.Models.WorkPackage", "WorkPackage")
                        .WithMany("WorkPackageLabourGradeAssignments")
                        .HasForeignKey("WorkPackageId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("COMP4911WebAPI.Models.WorkPackageReport", b =>
                {
                    b.HasOne("COMP4911WebAPI.Models.WorkPackage", "WorkPackage")
                        .WithMany("WorkPackageReports")
                        .HasForeignKey("WorkPackageId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("COMP4911WebAPI.Models.WorkPackageReportDetails", b =>
                {
                    b.HasOne("COMP4911WebAPI.Models.WorkPackageReport", "WorkPackageReport")
                        .WithMany("WorkPackageReportDetails")
                        .HasForeignKey("WorkPackageReportId")
                        .OnDelete(DeleteBehavior.Restrict);
                });
#pragma warning restore 612, 618
        }
    }
}
